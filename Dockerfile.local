FROM php:8.2-fpm

# Set working directory
WORKDIR /var/www/html

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    nodejs \
    npm \
    sqlite3 \
    libsqlite3-dev

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_sqlite mbstring exif pcntl bcmath gd

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u 1000 -d /home/dev dev
RUN mkdir -p /home/dev/.composer && \
    chown -R dev:dev /home/dev

# Create Laravel required directories and set permissions
RUN mkdir -p /var/www/html/storage/framework/{sessions,views,cache} \
    && mkdir -p /var/www/html/storage/logs \
    && mkdir -p /var/www/html/bootstrap/cache \
    && mkdir -p /var/www/html/database \
    && chown -R dev:www-data /var/www/html \
    && chmod -R 775 /var/www/html/storage \
    && chmod -R 775 /var/www/html/bootstrap/cache \
    && chmod -R 775 /var/www/html/database

# Switch to non-root user
USER dev

# Copy dependency files first
COPY --chown=dev:www-data composer.json composer.lock ./
COPY --chown=dev:www-data package.json package-lock.json* ./

# Install PHP dependencies
RUN composer install --no-scripts --no-autoloader

# Install Node dependencies
RUN npm ci

# Now copy the rest of the application
COPY --chown=dev:www-data . .

# Create .env file with necessary configurations
RUN echo "APP_NAME=LMS\n\
APP_ENV=local\n\
APP_DEBUG=true\n\
APP_URL=http://localhost:8000\n\
DB_CONNECTION=sqlite\n\
DB_DATABASE=/var/www/html/database/database.sqlite\n\
BROADCAST_DRIVER=log\n\
CACHE_DRIVER=file\n\
QUEUE_CONNECTION=sync\n\
SESSION_DRIVER=database\n\
SESSION_LIFETIME=120\n\
REDIS_HOST=redis\n\
REDIS_PASSWORD=null\n\
REDIS_PORT=6379\n\
VITE_APP_URL=http://localhost:5173" > .env

RUN php artisan migrate --force

# Setup the application
RUN touch database/database.sqlite && \
    chmod 775 database/database.sqlite && \
    composer dump-autoload && \
    php artisan key:generate && \
    php artisan config:clear && \
    php artisan cache:clear && \

EXPOSE 8000

CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]